openapi: 3.0.1
info:
  title: Conferencer API
  version: 1.0.0
  description: API for user authentication and registration.

paths:
  /auth/signup:
    post:
      summary: User registration
      operationId: signup
      description: Create a new user account.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        201:
          description: User successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponse'
        400:
          description: Invalid input or user already exists.
        500:
          description: Server error.

  /auth/login:
    post:
      summary: User login
      operationId: login
      description: Authenticate a user and return a token.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        200:
          description: User authenticated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        401:
          description: Invalid email or password.
        500:
          description: Server error.

components:
  schemas:
    SignupRequest:
      type: object
      required:
        - name
        - surname
        - email
        - password
      properties:
        name:
          type: string
          example: John
        surname:
          type: string
          example: Doe
        email:
          type: string
          format: email
          example: john.doe@example.com
        password:
          type: string
          format: password
          example: "strongpassword123"
        phone:
          type: string
          example: "+1234567890"

    SignupResponse:
      type: object
      properties:
        userId:
          type: string
          format: uuid
          example: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
        message:
          type: string
          example: "User registered successfully."

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: john.doe@example.com
        password:
          type: string
          format: password
          example: "strongpassword123"

    LoginResponse:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        expiresAt:
          type: string
          format: date-time
          example: "2024-12-31T23:59:59Z"